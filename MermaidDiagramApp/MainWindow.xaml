<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="MermaidDiagramApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MermaidDiagramApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tcb="using:TextControlBoxNS"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:ctk="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:MermaidDiagramApp.Converters"
    xmlns:models="using:MermaidDiagramApp.Models"
    xmlns:viewmodels="using:MermaidDiagramApp.ViewModels"
    mc:Ignorable="d"
    Title="MermaidDiagramApp">

    <Window.SystemBackdrop>
        <MicaBackdrop />
    </Window.SystemBackdrop>

    <Grid RowDefinitions="Auto, Auto, Auto, *" KeyDown="MainWindow_KeyDown">
        <ContentDialog x:Name="PngExportDialog"
                       Title="Export PNG Options"
                       PrimaryButtonText="Export"
                       CloseButtonText="Cancel"
                       DefaultButton="Primary"
                       MinWidth="320">
            <StackPanel Spacing="12">
                <TextBlock Text="Set the export scale. A higher value increases the image resolution." TextWrapping="Wrap"/>
                <NumberBox x:Name="ScaleNumberBox"
                           Header="Scale"
                           Value="2"
                           Minimum="0.5"
                           Maximum="10"
                           SpinButtonPlacementMode="Compact"
                           SmallChange="0.5"/>
            </StackPanel>
        </ContentDialog>

        <ContentDialog x:Name="RestartDialog"
                       Title="Update Complete"
                       Content="Mermaid.js has been updated. Do you want to restart the application now for the changes to take effect?"
                       PrimaryButtonText="Restart Now"
                       CloseButtonText="Later"
                       DefaultButton="Primary">
        </ContentDialog>

        <ContentDialog x:Name="AboutDialog"
                       Title="About Mermaid Diagram App"
                       CloseButtonText="OK"
                       DefaultButton="Close">
            <StackPanel Spacing="12">
                <TextBlock x:Name="VersionTextBlock"/>
                <TextBlock x:Name="InstallDateTextBlock"/>
                <TextBlock x:Name="MermaidVersionTextBlock"/>
            </StackPanel>
        </ContentDialog>

        <InfoBar x:Name="UpdateInfoBar" Grid.Row="0" IsOpen="False" Severity="Informational" Margin="12,12,12,0">
            <InfoBar.ActionButton>
                <Button Content="Update" Click="UpdateMermaid_Click"/>
            </InfoBar.ActionButton>
        </InfoBar>

        <InfoBar x:Name="LinterInfoBar" Grid.Row="1" IsOpen="False" Severity="Warning" Margin="12,0,12,0">
            <!-- Action button is set dynamically from code-behind -->
        </InfoBar>

        <MenuBar x:Name="MainMenuBar" Grid.Row="2">
            <MenuBarItem Title="File">
                <MenuFlyoutSubItem Text="New">
                    <MenuFlyoutItem Text="Class Diagram" Click="NewClassDiagram_Click"/>
                    <MenuFlyoutItem Text="Sequence Diagram" Click="NewSequenceDiagram_Click"/>
                    <MenuFlyoutItem Text="State Diagram" Click="NewStateDiagram_Click"/>
                    <MenuFlyoutItem Text="Activity Diagram" Click="NewActivityDiagram_Click"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Flowchart" Click="NewFlowchart_Click"/>
                    <MenuFlyoutItem Text="Gantt Chart" Click="NewGanttChart_Click"/>
                    <MenuFlyoutItem Text="Pie Chart" Click="NewPieChart_Click"/>
                    <MenuFlyoutItem Text="Git Graph" Click="NewGitGraph_Click"/>
                </MenuFlyoutSubItem>
                <MenuFlyoutItem Text="Open" Click="Open_Click"/>
                <MenuFlyoutItem Text="Save" Click="Save_Click"/>
                <MenuFlyoutSubItem Text="Export">
                    <MenuFlyoutItem Text="as SVG" Click="ExportSvg_Click"/>
                    <MenuFlyoutItem Text="as PNG" Click="ExportPng_Click"/>
                </MenuFlyoutSubItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Exit" Click="Exit_Click"/>
            </MenuBarItem>
            <MenuBarItem Title="Edit">
                <MenuFlyoutItem Text="Check &amp; Fix Mermaid Syntax" Click="CheckSyntax_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F7"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
            </MenuBarItem>
            <MenuBarItem Title="View">
                <ToggleMenuFlyoutItem x:Name="BuilderTool" Text="Diagram Builder" Click="BuilderTool_Click"/>
                <ToggleMenuFlyoutItem x:Name="PanTool" Text="Pan Tool" Click="PanTool_Click"/>
                <MenuFlyoutItem Text="Full Screen Preview" Click="ToggleFullScreen_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F11"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Presentation Mode" Click="PresentationMode_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Refresh Preview" Click="RefreshPreview_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5" Modifiers="Control"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
            </MenuBarItem>
            <MenuBarItem Title="Help">
                <MenuFlyoutItem Text="About" Click="About_Click"/>
                <MenuFlyoutSubItem Text="Diagnostics">
                    <MenuFlyoutItem Text="Open Log File" Click="OpenLogFile_Click"/>
                    <MenuFlyoutItem Text="Open Log Folder" Click="OpenLogFolder_Click"/>
                </MenuFlyoutSubItem>
            </MenuBarItem>
        </MenuBar>

        <Grid Grid.Row="3" Padding="12" x:Name="MainGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="BuilderColumn" Width="Auto" MinWidth="0" MaxWidth="500"/>
                <ColumnDefinition x:Name="BuilderSplitterColumn" Width="Auto"/>
                <ColumnDefinition x:Name="EditorColumn" Width="*"/>
                <ColumnDefinition x:Name="EditorPreviewSplitterColumn" Width="Auto"/>
                <ColumnDefinition x:Name="PreviewColumn" Width="*"/>
            </Grid.ColumnDefinitions>

            <Border x:Name="BuilderPanel" Grid.Column="0" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="12">
                <Grid RowDefinitions="Auto, Auto, *, Auto, Auto, *, Auto">
                    <TextBlock Grid.Row="0" Text="Diagram Builder" Style="{ThemeResource TitleTextBlockStyle}" Margin="0,0,0,12"/>

                    <TextBlock Grid.Row="1" Text="Nodes" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                    <ListView Grid.Row="2" ItemsSource="{Binding Nodes}" SelectedItem="{Binding SelectedNode, Mode=TwoWay}">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:FlowchartNode">
                                <TextBlock Text="{Binding Text}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <StackPanel Grid.Row="3" Spacing="8" Margin="0,12,0,0">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <Button Content="Add Node" Command="{Binding AddNodeCommand}"/>
                            <Button Content="Remove Node" Command="{Binding RemoveNodeCommand}"/>
                        </StackPanel>
                        
                        <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto, Auto" RowSpacing="8" ColumnSpacing="8" 
                              Visibility="{Binding SelectedNode, Converter={StaticResource NullToVisibilityConverter}}">
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="ID" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding SelectedNode.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Text" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedNode.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Shape" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{x:Bind models:FlowchartNode.GetShapeNames()}" 
                                      SelectedItem="{Binding SelectedNode.Shape, Mode=TwoWay, Converter={StaticResource EnumToStringConverter}}"/>
                        </Grid>
                    </StackPanel>
                    
                    <TextBlock Grid.Row="4" Text="Edges" Style="{ThemeResource SubtitleTextBlockStyle}" Margin="0,24,0,0"/>
                    <ListView Grid.Row="5" ItemsSource="{Binding Edges}" SelectedItem="{Binding SelectedEdge, Mode=TwoWay}">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:FlowchartEdge">
                                <TextBlock Text="{Binding Label}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <StackPanel Grid.Row="6" Spacing="8" Margin="0,12,0,0">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <Button Content="Add Edge" Command="{Binding AddEdgeCommand}"/>
                            <Button Content="Remove Edge" Command="{Binding RemoveEdgeCommand}"/>
                        </StackPanel>

                        <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto, Auto, Auto" RowSpacing="8" ColumnSpacing="8"
                              Visibility="{Binding SelectedEdge, Converter={StaticResource NullToVisibilityConverter}}">
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="From" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Nodes}" SelectedValue="{Binding SelectedEdge.StartNodeId, Mode=TwoWay}" SelectedValuePath="Id" DisplayMemberPath="Id"/>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="To" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Nodes}" SelectedValue="{Binding SelectedEdge.EndNodeId, Mode=TwoWay}" SelectedValuePath="Id" DisplayMemberPath="Id"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Text" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding SelectedEdge.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Arrow" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{x:Bind models:FlowchartEdge.GetArrowTypeNames()}" 
                                      SelectedItem="{Binding SelectedEdge.ArrowType, Mode=TwoWay, Converter={StaticResource EnumToStringConverter}}"/>
                        </Grid>
                    </StackPanel>
                </Grid>
            </Border>

            <ctk:GridSplitter x:Name="BuilderSplitter"
                                   Grid.Column="1"
                                   Width="12"
                                   ResizeBehavior="BasedOnAlignment"
                                   ResizeDirection="Auto"
                                   Background="Transparent"/>
            
            <tcb:TextControlBox
                x:Name="CodeEditor"
                Grid.Column="2"
                ShowLineNumbers="True"/>

            <ctk:GridSplitter x:Name="EditorPreviewSplitter"
                                   Grid.Column="3"
                                   Width="12"
                                   ResizeBehavior="BasedOnAlignment"
                                   ResizeDirection="Auto"
                                   Background="Transparent"/>

            <Grid Grid.Column="4">
                <WebView2 x:Name="PreviewBrowser"/>
                <Button x:Name="FloatingRefreshButton"
                        Content="⟳"
                        Width="36"
                        Height="36"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Margin="16"
                        Background="#99000000"
                        Foreground="White"
                        FontSize="18"
                        CornerRadius="18"
                        ToolTipService.ToolTip="Refresh Preview"
                        Click="RefreshPreview_Click"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
